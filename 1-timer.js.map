{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputData = document.querySelector('#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst timeDays = document.querySelector('[data-days]');\nconst timeHours = document.querySelector('[data-hours]');\nconst timeMinutes = document.querySelector('[data-minutes]');\nconst timeSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\n\n//\nbutton.setAttribute('disabled', '');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.error({\n        position: 'topRight',\n        title: 'Caution',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      button.removeAttribute('disabled');\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n//\nflatpickr(inputData, options);\n//\nbutton.addEventListener('click', () => {\n  onButtonClick();\n  inputData.setAttribute('disabled', '');\n  button.setAttribute('disabled', '');\n});\n//\nfunction onButtonClick() {\n  const setIntervalId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    timeDays.textContent = addLeadingZero(days);\n    timeHours.textContent = addLeadingZero(hours);\n    timeMinutes.textContent = addLeadingZero(minutes);\n    timeSeconds.textContent = addLeadingZero(seconds);\n\n    //\n    if (diff < 1000) {\n      clearInterval(setIntervalId);\n      inputData.removeAttribute('disabled');\n    }\n  }, 1000);\n}\n\n//\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["inputData","button","timeDays","timeHours","timeMinutes","timeSeconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","onButtonClick","setIntervalId","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"sFAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KAGvBL,EAAO,aAAa,WAAY,EAAE,EAClC,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,EAC7BC,EAAS,MAAM,CACb,SAAU,WACV,MAAO,UACP,QAAS,oCACjB,CAAO,GAEDR,EAAO,gBAAgB,UAAU,EACjCK,EAAmBE,EAAc,CAAC,EAErC,CACH,EAEAE,EAAUV,EAAWO,CAAO,EAE5BN,EAAO,iBAAiB,QAAS,IAAM,CACrCU,IACAX,EAAU,aAAa,WAAY,EAAE,EACrCC,EAAO,aAAa,WAAY,EAAE,CACpC,CAAC,EAED,SAASU,GAAgB,CACvB,MAAMC,EAAgB,YAAY,IAAM,CACtC,MAAMC,EAAOP,EAAmB,KAAK,IAAG,EAClC,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDX,EAAS,YAAciB,EAAeL,CAAI,EAC1CX,EAAU,YAAcgB,EAAeJ,CAAK,EAC5CX,EAAY,YAAce,EAAeH,CAAO,EAChDX,EAAY,YAAcc,EAAeF,CAAO,EAG5CJ,EAAO,MACT,cAAcD,CAAa,EAC3BZ,EAAU,gBAAgB,UAAU,EAEvC,EAAE,GAAI,CACT,CAGA,SAASkB,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}